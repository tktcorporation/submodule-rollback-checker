name: 'submodule-rollback-checker'
description: 'Checks if submodule commits have been rolled back in a pull request.'
author: 'tktcorporation'
branding:
  icon: 'git-merge'
  color: 'yellow'

inputs:
  github-token:
    description: 'A token (e.g., GitHub PAT or github-token) with permission to read submodules.'
    required: true

runs:
  using: "composite"
  steps:
    - name: Extract PR info from environment
      id: extract_info
      run: |
        echo "[DEBUG] GITHUB_REF=$GITHUB_REF"
        echo "[DEBUG] GITHUB_REPOSITORY=$GITHUB_REPOSITORY"
        echo "[DEBUG] GITHUB_BASE_REF=$GITHUB_BASE_REF"
        echo "[DEBUG] GITHUB_HEAD_REF=$GITHUB_HEAD_REF"

        # PR番号抽出: refs/pull/123/merge の 123 を抽出
        pr_number=$(echo "$GITHUB_REF" | grep -oE 'pull/[0-9]+' | cut -d'/' -f2)
        owner="${GITHUB_REPOSITORY%/*}"
        repo="${GITHUB_REPOSITORY#*/}"

        if [ -z "$pr_number" ]; then
          echo "::error::Could not determine PR number from GITHUB_REF"
          exit 1
        fi

        if [ -z "$owner" ] || [ -z "$repo" ]; then
          echo "::error::Could not determine owner/repo from GITHUB_REPOSITORY"
          exit 1
        fi

        echo "pr_number=$pr_number" >> "$GITHUB_OUTPUT"
        echo "owner=$owner" >> "$GITHUB_OUTPUT"
        echo "repo=$repo" >> "$GITHUB_OUTPUT"

    - name: Checkout base branch
      uses: actions/checkout@v4
      with:
        token: ${{ inputs.github-token }}
        ref: $GITHUB_BASE_REF
        submodules: 'recursive'

    - name: Get base commit hash
      id: get_base_commit
      run: |
        base_commit_hash=$(git rev-parse HEAD)
        echo "base_commit_hash=$base_commit_hash" >> "$GITHUB_OUTPUT"

    - name: Store base submodules hash
      id: store_base_submodules_hash
      run: |
        # 全サブモジュールパス取得
        submodule_paths=$(git config --file .gitmodules --get-regexp path | awk '{print $2}')
        echo "[DEBUG] Submodule paths:"
        echo "$submodule_paths"

        touch base_submodules_hash.json
        echo -n "{" > base_submodules_hash.json
        first=true
        for p in $submodule_paths; do
          hash=$(git -C "$p" rev-parse HEAD)
          if [ "$first" = true ]; then
            first=false
          else
            echo -n "," >> base_submodules_hash.json
          fi
          echo -n "\"$p\":\"$hash\"" >> base_submodules_hash.json
        done
        echo "}" >> base_submodules_hash.json

        echo "base_submodules_hash=$(cat base_submodules_hash.json)" >> "$GITHUB_OUTPUT"

    - name: Checkout PR head branch
      uses: actions/checkout@v4
      with:
        token: ${{ inputs.github-token }}
        ref: $GITHUB_HEAD_REF
        submodules: 'recursive'

    - name: Check for rollback in each submodule
      id: check_rollback
      run: |
        base_commit_hash="${{ steps.get_base_commit.outputs.base_commit_hash }}"
        base_submodules_hash='${{ steps.store_base_submodules_hash.outputs.base_submodules_hash }}'

        echo "$base_submodules_hash" | jq '.' > base_submodules_hash.json

        submodule_paths=$(git config --file .gitmodules --get-regexp path | awk '{print $2}')
        echo "[DEBUG] Checking submodules on PR head:"
        echo "$submodule_paths"

        touch warnings.txt
        rollback_found=false

        for p in $submodule_paths; do
          incoming_hash=$(git -C "$p" rev-parse HEAD)
          base_hash=$(echo "$base_submodules_hash" | jq -r ".[\"$p\"]")

          if [ -z "$base_hash" ]; then
            echo "Warning: could not find base hash for submodule $p"
            continue
          fi

          git merge-base --is-ancestor "$base_hash" "$incoming_hash"
          if [ $? -ne 0 ]; then
            echo "Submodule '$p' has been rolled back from $base_hash to $incoming_hash!" >> warnings.txt
            rollback_found=true
          fi
        done

        if [ "$rollback_found" = true ]; then
          echo "has_warning=true" >> "$GITHUB_OUTPUT"
        fi

    - name: Post warning comment if needed
      if: ${{ steps.check_rollback.outputs.has_warning == 'true' }}
      uses: actions/github-script@v6
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          const fs = require('fs');
          const warning = fs.readFileSync('warnings.txt', 'utf8');
          const pr_number = parseInt("${{ steps.extract_info.outputs.pr_number }}", 10);
          const owner = "${{ steps.extract_info.outputs.owner }}";
          const repo = "${{ steps.extract_info.outputs.repo }}";

          if (warning) {
            await github.rest.issues.createComment({
              issue_number: pr_number,
              owner,
              repo,
              body: `> [!CAUTION]\n> The following submodules have been rolled back:\n\n${warning}`,
            });
          }

    - name: Fail job if rollback detected
      if: ${{ steps.check_rollback.outputs.has_warning == 'true' }}
      run: |
        echo "Job failed due to submodule rollback"
        exit 1
